name: Combine Wordlists

on:
  push:
    branches:
      - main
      - dev
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  fetch_wordlists:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Create wordlists directory
        run: mkdir -p ~/Wordlists

      - name: Fetch wordlists
        id: fetch
        run: |
          import os
          import subprocess
          import json

          def fetch_wordlists_from_file():
              urls = []
              with open('WordlistCombiner/urls.txt', 'r') as f:
                  urls = [line.strip() for line in f.readlines()]
              return urls

          urls = fetch_wordlists_from_file()
          with open(os.path.expanduser('~/Wordlists/urls.txt'), 'w') as f:
              for url in urls:
                  if url.startswith('http'):
                      f.write(f'{url}\\n')
                  else:
                      api_url = f'https://api.github.com/repos/{url}/contents/'
                      result = subprocess.run(['curl', '-s', api_url], capture_output=True, text=True)
                      if result.returncode == 0:
                          contents = json.loads(result.stdout)
                          for item in contents:
                              if item['name'].endswith('.txt'):
                                  f.write(f'{item["download_url"]}\\n')

  test_script:
    runs-on: ubuntu-latest
    needs: fetch_wordlists
    steps:
      - name: Test Python
        run: python --version

  deploy:
    runs-on: ubuntu-latest
    needs: test_script
    steps:
      - name: Upload fetched URLs
        uses: actions/upload-artifact@v2
        with:
          name: fetched-urls
          path: ~/Wordlists/urls.txt
